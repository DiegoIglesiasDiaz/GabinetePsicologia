@page "/Informes"
@using GabinetePsicologia.Shared
@using GabinetePsicologia.Client.Shared
<PageTitle>Informes</PageTitle>
@if (isInRole)
{
    <div class="d-flex flex-column align-items-center justify-content-center " style="padding-top:1em">
        @if (isPsicologo)
        {
            <div class="DivBotonTrastornos DivBotonesTop">
                <RadzenButton Text="Añadir Informe" ButtonStyle="ButtonStyle.Primary" Click=@(args => { var a = new InformeDto();AbrirModal(new InformeDto(),true); }) class="BotonPrincipal BotonTrastornos" />
                <RadzenButton Text="Borrar Informe" ButtonStyle="ButtonStyle.Primary" Click=BorrarInforme class="BotonDelete BotonTrastornos" />
            </div>
        }
        @if (LsInformes != null && LsInformes.Count > 0)
        {
            <RadzenDataGrid @ref="grid" AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="8"
                    AllowSorting="true" Data="@LsInformes" TItem="InformeDto" ColumnWidth="200px" AllowRowSelectOnRowClick=allowRowSelectOnRowClick
                    SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@selectedInforme class="m-4" Style="color:white;width: 100%;">
                <Columns>
                    <RadzenDataGridColumn TItem="InformeDto" Width="60px" Sortable="false" Filterable="false">
                        <HeaderTemplate>
                            <RadzenCheckBox TriState="false" TValue="bool" Value="@( selectedInforme != null && LsInformes.Count().Equals(selectedInforme.Count()))"
                                    Change="@(args => selectedInforme = args ? LsInformes.ToList() : null)" />
                        </HeaderTemplate>
                        <Template Context="data">
                            <RadzenCheckBox TriState="false" Value="@(selectedInforme != null && selectedInforme.Contains(data))"
                                    TValue="bool" Change=@(args => { if(!allowRowSelectOnRowClick) { grid.SelectRow(data); }}) />
                        </Template>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="InformeDto" Property="PacienteFullName" Title="Paciente" Visible=isPsicologo />
                    <RadzenDataGridColumn TItem="InformeDto" Property="PsicologoFullName" Title="Psicólogo" Visible=isPaciente />
                    <RadzenDataGridColumn TItem="InformeDto" Property="Severidad" Title="Severidad" Visible=isPsicologo />
                    <RadzenDataGridColumn TItem="InformeDto" Property="NombreTipoTrastorno" Title="Trastorno" />
                    <RadzenDataGridColumn TItem="InformeDto" Property="UltimaFechaString2" Title="Última Fecha de Modificación" />
                    <RadzenDataGridColumn TItem="InformeDto" Width="60px" Sortable="false" Filterable="false" Visible=@(isPsicologo || isPaciente)>
                        <Template Context="data">
                            <RadzenButton Icon="edit" Click=@(args => { AbrirModal(data,false); }) class="BotonLapiz" />
                        </Template>
                    </RadzenDataGridColumn>


                </Columns>
            </RadzenDataGrid>
        }
        else
        {
            <p>No Hay Informes.</p>
        }
    </div>
}
else
{
    <_403 />
}
