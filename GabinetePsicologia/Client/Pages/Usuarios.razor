@page "/Usuarios"
@using GabinetePsicologia.Shared




@if (isInRole)
{
    <h3>Usuarios</h3>
    @if (isAdmin)
    {
        <RadzenButton Text="Añadir Persona" ButtonStyle="ButtonStyle.Primary" Click=@(args => { PersonaForm = new PersonaDto();ShowInlineDialog(new PersonaDto()); }) Style="margin-left:auto;margin-right:0" />
        <RadzenButton Text="Borrar Persona" ButtonStyle="ButtonStyle.Primary" Click=@BorrarPersona Style="margin-left:auto;margin-right:0" />
    }
    <RadzenDataGrid @ref="grid" AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="8"
                AllowSorting="true" Data="@LsUsuarios" TItem="PersonaDto" ColumnWidth="200px" AllowRowSelectOnRowClick=allowRowSelectOnRowClick
                SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@selectedUsuarios class="m-4">
        <Columns>
            @if (isAdmin)
            {
                <RadzenDataGridColumn TItem="PersonaDto" Width="60px" Sortable="false" Filterable="false">
                    <HeaderTemplate>
                        <RadzenCheckBox TriState="false" TValue="bool" Value="@( selectedUsuarios != null && LsUsuarios.Count().Equals(selectedUsuarios.Count()))"
                                Change="@(args => selectedUsuarios = args ? LsUsuarios.ToList() : null)" />
                    </HeaderTemplate>
                    <Template Context="data">
                        <RadzenCheckBox TriState="false" Value="@(selectedUsuarios != null && selectedUsuarios.Contains(data))"
                                TValue="bool" Change=@(args => { if(!allowRowSelectOnRowClick) { grid.SelectRow(data); }}) />
                    </Template>
                </RadzenDataGridColumn>
            }
            <RadzenDataGridColumn TItem="PersonaDto" Property="Rol" Title="Rol" />
            <RadzenDataGridColumn TItem="PersonaDto" Property="Nombre" Title="Nombre" />
            <RadzenDataGridColumn TItem="PersonaDto" Property="FullName" Title="Apellidos" />
            <RadzenDataGridColumn TItem="PersonaDto" Property="NIF" Title="NIF" />
            <RadzenDataGridColumn TItem="PersonaDto" Property="Email" Title="Email" />
            <RadzenDataGridColumn TItem="PersonaDto" Property="Telefono" Title="Telefono" />
            @if (isAdmin)
            {
                <RadzenDataGridColumn TItem="PersonaDto" Width="60px" Sortable="false" Filterable="false">
                    <Template Context="data">
                        <RadzenButton Text="Editar" Click=@(args => {ShowInlineDialog(data); }) ButtonStyle="ButtonStyle.Secondary" />
                    </Template>
                </RadzenDataGridColumn>
            }

        </Columns>
    </RadzenDataGrid>
}
else
{
    <p>No estas Autorizado para ver esta página.</p>
}
@{
    async Task ShowInlineDialog(PersonaDto data)
    {
        PersonaForm = new PersonaDto();
        string titulo = "";
        if (PersonaForm.Id == Guid.Empty)
            titulo = "Añadir Usuario";
        else
            titulo = "Editar Usuario";


        var result = await DialogService.OpenAsync(titulo, ds =>
    @<div>
        <div class="row">
            <div class="col">
                <RadzenCard>
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Rol</RadzenText>
                    <RadzenCheckBoxList @bind-Value="values" TValue="int">
                        <Items>
                            <RadzenCheckBoxListItem Text="Paciente" Value="1" />
                            <RadzenCheckBoxListItem Text="Psicologo" Value="2" />
                            <RadzenCheckBoxListItem Text="Administrador" Value="3" />
                        </Items>
                    </RadzenCheckBoxList>
                </RadzenCard>
                <RadzenCard>
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Correo</RadzenText>
                    <RadzenTextBox @bind-Value=PersonaForm.Email Name="name" class="w-100" />
                    <RadzenRequiredValidator Component="name" Text="*Correo requerido"></RadzenRequiredValidator>
                </RadzenCard>
                <RadzenCard>
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Contraseña Provisional</RadzenText>
                    <RadzenTextArea @bind-Value=PersonaForm.Contraseña Name="Contraseña" class="w-100" />
                    <RadzenRequiredValidator Component="Contraseña" Text="*Contraseña requerido"></RadzenRequiredValidator>
                </RadzenCard>
                <RadzenCard>
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Nombre</RadzenText>
                    <RadzenTextBox @bind-Value=PersonaForm.Nombre Name="name" class="w-100" />
                    <RadzenRequiredValidator Component="name" Text="*Nombre requerido"></RadzenRequiredValidator>
                </RadzenCard>
                <RadzenCard>
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Apellido 1</RadzenText>
                    <RadzenTextBox @bind-Value=PersonaForm.Apellido1 Name="Apellido1" class="w-100" />
                    <RadzenRequiredValidator Component="Apellido1" Text="*Apellido1 requerido"></RadzenRequiredValidator>
                </RadzenCard>
                <RadzenCard>
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Apellido 2</RadzenText>
                    <RadzenTextArea @bind-Value=PersonaForm.Apellido2 Name="Apellido2" class="w-100" />
                </RadzenCard>
                <RadzenCard>
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">NIF</RadzenText>
                    <RadzenTextBox @bind-Value=PersonaForm.NIF Name="NIF" class="w-100" />
                    <RadzenRequiredValidator Component="NIF" Text="*NIF requerido"></RadzenRequiredValidator>
                </RadzenCard>
                <RadzenCard>
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Telefono</RadzenText>
                    <RadzenTextBox @bind-Value=PersonaForm.Telefono Name="Telefono" class="w-100" />
                    <RadzenRequiredValidator Component="Telefono" Text="*Telefono requerido"></RadzenRequiredValidator>
                </RadzenCard>
                <br><br>
                <div style="display:flex;align-items:center;justify-content:center">
                    <RadzenButton style="margin:10px" Text="Cancelar" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Light" class="me-1" />
                    <RadzenButton style="margin:10px" Text="Guardar" Click="GuardarPersona" class="me-1" />
                </div>

            </div>
        </div>
    </div>);


    }

}

