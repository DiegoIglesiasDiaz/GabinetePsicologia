@page "/Usuarios"
@using GabinetePsicologia.Shared




@if (isInRole)
{
    <h3>Usuarios</h3>
    @if(isAdmin){
    <RadzenButton Text="Añadir Persona" ButtonStyle="ButtonStyle.Primary" Click=@(args => { PersonaForm = new PersonaDto();ShowInlineDialog(); }) Style="margin-left:auto;margin-right:0" />
    <RadzenButton Text="Borrar Persona" ButtonStyle="ButtonStyle.Primary" Click=@BorrarPersona Style="margin-left:auto;margin-right:0" />
    }
    <RadzenDataGrid @ref="grid" AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="8"
                AllowSorting="true" Data="@LsUsuarios" TItem="PersonaDto" ColumnWidth="200px" AllowRowSelectOnRowClick=allowRowSelectOnRowClick
                SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@selectedUsuarios class="m-4">
        <Columns>
            @if (isAdmin)
            {
                <RadzenDataGridColumn TItem="PersonaDto" Width="60px" Sortable="false" Filterable="false">
                    <HeaderTemplate>
                    <RadzenCheckBox TriState="false" TValue="bool" Value="@( selectedUsuarios != null && LsUsuarios.Count().Equals(selectedUsuarios.Count()))"
                                Change="@(args => selectedUsuarios = args ? LsUsuarios.ToList() : null)" />
                </HeaderTemplate>
                <Template Context="data">
                    <RadzenCheckBox TriState="false" Value="@(selectedUsuarios != null && selectedUsuarios.Contains(data))"
                                TValue="bool" Change=@(args => { if(!allowRowSelectOnRowClick) { grid.SelectRow(data); }}) />
                </Template>
            </RadzenDataGridColumn>
            }
             <RadzenDataGridColumn TItem="PersonaDto" Property="Rol" Title="Rol" />
            <RadzenDataGridColumn TItem="PersonaDto" Property="Nombre" Title="Nombre" />
            <RadzenDataGridColumn TItem="PersonaDto" Property="FullName" Title="Apellidos" />
            <RadzenDataGridColumn TItem="PersonaDto" Property="NIF" Title="NIF" />
            <RadzenDataGridColumn TItem="PersonaDto" Property="Email" Title="Email" />
            <RadzenDataGridColumn TItem="PersonaDto" Property="Telefono" Title="Telefono" />
            @if (isAdmin)
            {
            <RadzenDataGridColumn TItem="PersonaDto" Width="60px" Sortable="false" Filterable="false">
                <Template Context="data">
                    <RadzenButton Text="Editar" Click=@(args => { PersonaForm = data;ShowInlineDialog(); }) ButtonStyle="ButtonStyle.Secondary" />
                </Template>
            </RadzenDataGridColumn>
            }

        </Columns>
    </RadzenDataGrid>
}
else
{
    <p>No estas Autorizado para ver esta página.</p>
}
@{
    async Task ShowInlineDialog()
    {
    //    string titulo = "";
    //    if (PersonaForm.Id == Guid.Empty)
    //        titulo = "Añadir PersonaDto";
    //    else
    //        titulo = "Editar PersonaDto";


    //    var result = await DialogService.OpenAsync(titulo, ds =>
    //@<div>
    //    <div class="row">
    //        <div class="col">
    //            <RadzenCard>
    //                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Nombre</RadzenText>
    //                <RadzenTextBox @bind-Value=PersonaForm.Nombre Name="name" class="w-100" />
    //                <RadzenRequiredValidator Component="name" Text="*Nombre requerido"></RadzenRequiredValidator>
    //            </RadzenCard>
    //            <RadzenCard>
    //                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Tipo</RadzenText>
    //                <RadzenTextBox @bind-Value=PersonaForm.Tipo Name="Tipo" class="w-100" />
    //                <RadzenRequiredValidator Component="Tipo" Text="*Nombre requerido"></RadzenRequiredValidator>
    //            </RadzenCard>
    //            <RadzenCard>
    //                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Síntomas</RadzenText>
    //                <RadzenTextArea @bind-Value=PersonaForm.Sintomas Name="Sintomas" class="w-100" />
    //                <RadzenRequiredValidator Component="Sintomas" Text="*Nombre requerido"></RadzenRequiredValidator>
    //            </RadzenCard>

    //            <br><br>
    //            <div style="display:flex;align-items:center;justify-content:center">
    //                <RadzenButton style="margin:10px" Text="Cancelar" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Light" class="me-1" />
    //                <RadzenButton style="margin:10px" Text="Guardar" Click="GuardarPersona" class="me-1" />
    //            </div>


    //        </div>
    //    </div>
    //</div>);


    }

}

